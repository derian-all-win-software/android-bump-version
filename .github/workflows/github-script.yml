name: Github script

on:
  workflow_dispatch:
    inputs:
      issue_title:
        type: string
        default: Issue title

jobs:
  github-script:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create new issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const seconds = 90;
            const timeout = 0;
            const maxAttempts = 3;
            let attempts = 1;
            
            async function createGitHubIssue() {
              const issueTitle = "${{ github.event.inputs.issue_title }}";
              const issueBody = "### Title test";
            
              const duplicateIssueRequest = await github.rest.search.issuesAndPullRequests({
                q: `repo:${{ github.repository }} is:issue is:open in:title ${issueTitle}`,
              });
              const issueExists = duplicateIssueRequest.data.total_count > 0;
              if (issueExists) {
                console.log(`There's already an issue for \"${issueTitle}\"`);
              } else {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: issueTitle,
                  body: issueBody,
                });
                console.log("Issue created successfully") 
              }
            }
            
            function handleGitHubIssue() {
              if (attempts > maxAttempts) {
                throw new Error("Issue not created successfully");
              }
            
              setTimeout(() => {
                createGitHubIssue()
                .catch((error) => {
                  if (
                    !error?.response?.data?.message.includes(
                      "You have exceeded a secondary rate limit"
                    )
                  ) {
                    throw error;
                  }
            
                  attempts++;
                  timeout != 90 && (timeout += 90)
                  handleGitHubIssue();
                });
              }, timeout * 1000)
            }
            
            handleGitHubIssue();